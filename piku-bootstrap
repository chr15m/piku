#!/bin/sh

# Usage:
# To bootstrap your machine called mybox.com with piku
# 
# ./piku-bootstrap mybox.com

PBD=${PIKU_BOOTSTRAP_DIR:-~/.piku-bootstrap}
VENV="${PBD}/virtualenv"
VIRTUALENV_VERSION="16.0.0"

main() {
  # print a message if this is a first time run
  if [ ! -d "${PBD}" ]; then
    echo "piku-bootstrap - welcome!"
    echo "Looks like this is your first time running this."
    echo "This script will self-install dependencies into ${PBD} now."
    echo
  fi

  # ensure we have a dir
  mkdir -p "${PBD}"

  if [ ! -d "$VENV" ]; then
    echo "Virtualenv setup not found. Installing it into ${PBD}."
    ensure_virtualenv
  fi

  # get into virtualenv
  . "$VENV/bin/activate"

  # ensure ansible
  if [ "`command -v ansible-playbook`" = "" ]
  then
    echo "ansible-playbook binary not found. Installing it into ${PBD}."
    pip install -q "ansible==2.7.10"
  fi

  if [ "$1" = "" ]
  then
    echo "`basename $0` HOSTNAME"
    echo "This will create a user 'piku' on the machine HOSTNAME"
    echo "setup git, and install the piku script there."
    echo "Requires root on HOSTNAME."
  else
    echo "Bootstrapping piku onto $1"
    ansible-playbook -i "$1", /dev/stdin << EOF
---
- hosts: all
  user: root
  tasks:
    - name: Add piku user
      user:
        name: piku
        password: !
        comment: PaaS access
        group: www-data

    #- name: Add current user's SSH key
    #  authorized_key:
    #    user: piku
    #    state: present
    #    key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    #    # key_options: "command="FINGERPRINT=85:29:07:cb:de:ad:be:ef:42:65:00:c8:d2:6b:9e:ff NAME=default /home/piku/piku.py $SSH_ORIGINAL_COMMAND",no-agent-forwarding,no-user-rc,no-X11-forwarding,no-port-forwarding"

    - name: Install Debian Packages
      apt:
        pkg: ['git', 'build-essential', 'libpcre3-dev', 'zlib1g-dev', 'python', 'python3', 'python3-pip', 'python3-dev']  #, 'python-dev', 'python3', 'python3-virtualenv', 'python3-pip']
        update_cache: true
        state: present
    
    - name: Install Python packages
      pip:
        executable: pip3
        name: ['click', 'virtualenv']

- hosts: all
  user: piku
  tasks:
    #- name: Download pyenv installer
    #  get_url:
    #    url: https://pyenv.run
    #    dest: ~/pyenv-installer
    #    mode: 0755

    #- name: Run pyenv installer
    #  shell:
    #    argv: ~/pyenv-installer
    #    creates: ~/.pyenv

    #- name: Install python3
    #  shell: ~/.pyenv/bin/pyenv install 3.6.8

    #- name: Use python3
    #  shell: ~/.pyenv/bin/pyenv local 3.6.8

    - name: Fetch piku.py script
      get_url:
        url: https://raw.githubusercontent.com/rcarmo/piku/master/piku.py
        dest: ~/piku.py
        mode: 0700

    - name: Run piku setup
      shell: python3 ~/piku.py setup
      args:
        creates: ~/.piku

    - name: Copy up my SSH key for piku
      copy: src=~/.ssh/id_rsa.pub dest=/tmp/id_rsa.pub

    - name: Ask piku to use SSH key
      shell: python3 piku.py setup:ssh /tmp/id_rsa.pub

EOF
  fi
}

bail_install() {
    error "Self-installation failed."
    exit 1;
}

ensure_virtualenv() {
  [ -d "${PBD}/virtualenv" ] || (\
      [ -f "./.virtualenv-source/virtualenv.py" ] || install_virtualenv;
      echo "Setting up the virtual environment." && \
      ./.virtualenv-source/virtualenv.py -p `which python` "${PBD}/virtualenv" || exit 1)
      rm -rf ./.virtualenv-source
}

install_virtualenv() {
  VIRTUALENV_URL="https://pypi.io/packages/source/v/virtualenv/virtualenv-${VIRTUALENV_VERSION}.tar.gz"
  echo "Downloading & installing Virtualenv."
  rm -rf "./.virtualenv-source"
  mkdir -p "./.virtualenv-source"
  [ -f "./virtualenv.tar.gz" ] || curl -f -L -o "./virtualenv.tar.gz" "${VIRTUALENV_URL}" || bail_install
  tar -zxf "./virtualenv.tar.gz" -C "./.virtualenv-source/" --strip-components=1 && \
  [ -d "./.virtualenv-source" ] && (\
          cd "./.virtualenv-source" && \
          /usr/bin/env python setup.py build ) \
          || bail_install;
}

main "$1"
